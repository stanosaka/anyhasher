name: Backend
on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'
    branches:
      - main
      - l4
  pull_request:
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'
    branches:
      - main
      - l4
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cache Node Modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-cache
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Install deps
        run: cd backend && npm i
      - name: Build
        run: cd backend && npm run build
      - name: Generate Artifact
        run: cd backend/build && zip -r artifact.zip ./ -x '*.git*'
      - name: Store Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-artifact
          path: backend/build/artifact.zip
  lint:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Node Modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-cache

      - name: Setup Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install deps
        if: steps.cache.outputs.cache-hit != 'true'
        run: cd backend && npm i

      - name: ðŸ˜‚ Lint code
        run: cd backend && npm run lint
  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Node Modules
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-cache

      - name: Install deps
        if: steps.cache.outputs.cache-hit != 'true'
        run: cd backend && npm i

      - name: Run the unit tests
        run: cd backend && npm t

  security-audit:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for security issue
        run: cd backend && npm audit --audit-level=medium

  static-analysis:
     needs: [build]
     runs-on: ubuntu-latest
     permissions:
       security-events: write
     steps:
       - uses: actions/checkout@v2

       # - name: Initialize CodeQL
       #   uses: github/codeql-action/init@v2
       #   with:
       #     languages: javascript

       # - name: Setup Node
       #   uses: actions/setup-node@v3
       #   with:
       #     node-version: 16.x

       # - name: Install Deps
       #   run: cd frontend && npm i

       # - name: Build
       #   run: cd frontend && npm run build

       # - name: Perform Analysis
       #   uses: github/codeql-action/analyze@v2

  deploy_to_eb:
     needs: [static-analysis,lint,test]
     runs-on: ubuntu-latest
     outputs:
       url: ${{ steps.deployment.outputs.page_url }}
     steps:
       - name: Get Artifact
         uses: actions/download-artifact@v4
         with:
           name: backend-artifact
           path: backend/build

       - name: Prepare ProcFile
         run: |
           echo "web: node server.js" > backend/build/Procfile

       - name: Prepare Zip File
         run: cd backend/build && zip -r artifact.zip ./ -x '*.git*'

       - name: Deploy to EB
         uses: einaregilsson/beanstalk-deploy@v20
         with:
           aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
           aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           application_name: szhou-app
           environment_name: szhou-app-env
           version_label: anyhasher-${{ github.run_number }}
           region: ap-southeast-2
           deployment_package: backend/build/artifact.zip

  verfiy-production:
     runs-on: ubuntu-latest
     needs: [deploy_to_eb]
     steps:
       - name: Checkout
         uses: actions/checkout@v2

       - name: Run Smoke Test
         run: |
           export BACKEND_URL=http://szhou-app.ap-southeast-2.elasticbeanstalk.com
           cd e2e
           chmod +x backend-smoke.sh
           ./backend-smoke.sh
